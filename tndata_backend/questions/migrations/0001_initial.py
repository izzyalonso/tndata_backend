# -*- coding: utf-8 -*-
# Generated by Django 1.9.12 on 2017-02-13 23:29
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(help_text='Your answer to a question.')),
                ('votes', models.IntegerField(blank=True, default=0)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Answer',
                'get_latest_by': 'created_on',
                'ordering': ['votes', 'created_on', 'content'],
                'verbose_name_plural': 'Answers',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, help_text='A question posed to the community.', max_length=256)),
                ('title_slug', models.SlugField(blank=True, max_length=256)),
                ('content', models.TextField(blank=True, help_text='Additional details or description to support your question.')),
                ('published', models.BooleanField(default=False)),
                ('votes', models.IntegerField(blank=True, default=0)),
                ('keywords', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=32), blank=True, default=list, help_text='Keywords for this question.', size=None)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('voters', models.ManyToManyField(blank=True, help_text='The group of users that have up-voted this question.', related_name='upvoted_questions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Question',
                'get_latest_by': 'created_on',
                'ordering': ['votes', 'created_on', 'title'],
                'verbose_name_plural': 'Questions',
            },
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questions.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='answer',
            name='voters',
            field=models.ManyToManyField(blank=True, help_text='The group of users that have up-voted this answer.', related_name='upvoted_answers', to=settings.AUTH_USER_MODEL),
        ),
    ]
